{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport { User } from '../class/user';\nimport { Repository } from '../class/repository';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ShowProfileService = /*#__PURE__*/(() => {\n  class ShowProfileService {\n    constructor(http) {\n      this.http = http;\n      this.token = environment.token;\n      this.clientId = environment.clientId;\n      this.clientSecret = environment.clientSecret;\n      this.user = new User(\"\", \"\", 0, 0, \"\", \"\", \"\", new Date());\n      this.repo = new Repository(\"\", \"\", \"\", new Date());\n    }\n\n    getProfileData(username) {\n      return this.http.get(`https://api.github.com/users/${username}?${this.clientId}&client_secret=${this.clientSecret}`);\n    }\n\n    getRepoData(username) {\n      return this.http.get(`https://api.github.com/users/${username}/repos?${this.clientId}&client_secret=${this.clientSecret}`);\n    }\n\n    findUser(username) {\n      let promise = new Promise((resolve, reject) => {\n        this.http.get(`https://api.github.com/users/${username}?`).toPromise().then(response => {\n          this.user.login = response.login;\n          this.user.avatar_url = response.avatar_url;\n          this.user.followers = response.followers;\n          this.user.following = response.following;\n          this.user.repos_url = response.repos_url;\n          this.user.bio = response.bio;\n          this.user.location = response.location;\n          this.user.created_at = response.created_at;\n          resolve();\n        }, error => {\n          reject(error);\n        });\n        this.http.get(`https://api.github.com/users/${username}/repos`).toPromise().then(response => {\n          this.repo.name = response.name;\n          this.repo.description = response.description;\n          this.repo.html_url = response.html_url;\n          this.repo.updated_at = response.updated_at;\n          resolve();\n        }, error => {\n          reject(error);\n        });\n      });\n      return promise;\n    }\n\n    updateFields(username) {\n      this.username = username;\n    }\n\n  }\n\n  ShowProfileService.ɵfac = function ShowProfileService_Factory(t) {\n    return new (t || ShowProfileService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ShowProfileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ShowProfileService,\n    factory: ShowProfileService.ɵfac,\n    providedIn: 'root'\n  });\n  return ShowProfileService;\n})();","map":null,"metadata":{},"sourceType":"module"}