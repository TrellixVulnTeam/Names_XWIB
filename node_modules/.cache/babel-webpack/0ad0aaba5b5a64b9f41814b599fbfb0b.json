{"ast":null,"code":"import { Repository } from '../class/repository';\nimport { User } from '../class/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    //private clientId = environment.clientId;\n    constructor(http) {\n      this.http = http;\n      this.newUserData = [];\n      this.user = new User(\"\", \"\", 0, 0, \"\", \"\", \"\", new Date());\n      this.repo = new Repository(\"\", \"\", \"\", new Date());\n    }\n\n    showMyData(username) {\n      let promise = new Promise((resolve, reject) => {\n        this.http.get(`https://api.github.com/users/${username}?`).toPromise().then(response => {\n          this.user.login = response.login;\n          this.user.avatar_url = response.avatar_url;\n          this.user.followers = response.followers;\n          this.user.following = response.following;\n          this.user.repos_url = response.repos_url;\n          this.user.bio = response.bio;\n          this.user.location = response.location;\n          this.user.created_at = response.created_at;\n          resolve();\n        }, error => {\n          reject(error);\n        });\n      });\n      return promise;\n    }\n\n    showMyRepo(username) {}\n\n    ngOnInit() {}\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}